<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Corvinus.WPF.Presentation.Controls"
                    xmlns:converters="clr-namespace:Corvinus.WPF.Presentation.Resources.Converters">
    <!-- Converters -->
    <converters:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

    <!-- Window Style -->
    <Style x:Key="ControlImageButton" TargetType="{x:Type controls:ImageButton}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageButton}">
                    <Grid Width="auto" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="Pressed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard/>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource CThemeWhite}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="imagePath">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource CThemeWhite}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource CThemeColorC}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource CThemeWhite}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="imagePath">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource CThemeWhite}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource CThemeColorB}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Grid.Column="0" Margin="7,5,5,5" x:Name="imageBorder" Padding="2">
                            <Viewbox>
                                <Path x:Name="imagePath" Data="{TemplateBinding ImageGeometry}" Stretch="Uniform"  Margin="0,0,0,0" Fill="{TemplateBinding Foreground}" />
                            </Viewbox>
                        </Border>
                        <ContentPresenter x:Name="textBlock" Grid.Column="1" Margin="0,0,0,0" Content="{TemplateBinding Content}" TextBlock.FontFamily="Segoe UI"  VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Data" SourceName="imagePath" Value="">
                            <Setter Property="Visibility" TargetName="imageBorder" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30"
                           CornerRadius="0"
                           GlassFrameThickness="5,30,5,5"
                           ResizeBorderThickness="5"
                           UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeColorD}" />
        <Setter Property="Background" Value="{DynamicResource ThemeBlack}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="5,35,5,5">

                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Border>
                        <DockPanel Height="30"
                                   VerticalAlignment="Top"
                                   LastChildFill="False"
                                   Margin="5">

                            <Border Margin="0" x:Name="imageBorder" Padding="2" DockPanel.Dock="Left" VerticalAlignment="Top" Width="25" Height="25">
                                <Viewbox>
                                    <Path x:Name="imagePath" Data="{StaticResource Logo}" Stretch="Uniform" Margin="0,0,0,0" Fill="{StaticResource ThemeColorWhite}" />
                                </Viewbox>
                            </Border>

                            <TextBlock Margin="5,0,0,0"
                                       VerticalAlignment="Top"
                                       DockPanel.Dock="Left"
                                       FontSize="16"
                                       Foreground="White"
                                       Text="{TemplateBinding Title}"/>

                            <controls:ImageButton x:Name="CloseWindow"
                                    Width="30"
                                    Height="25"
                                    Margin="0"
                                    Command="{Binding CloseCommand}"
                                    Foreground="{DynamicResource ThemeWhite}"
                                    Background="{DynamicResource ThemeColorD}"
                                    Style="{DynamicResource ControlImageButton}"
                                    ImageGeometry="{DynamicResource CancelNCGeometry}"
                                    DockPanel.Dock="Right"
                                    WindowChrome.IsHitTestVisibleInChrome="True"
                                    VerticalAlignment="Top"/>

                            <controls:ImageButton x:Name="MaximizeWindow"
                                Width="30"
                                Height="25"
                                Margin="0,0,0,0"
                                Click="{Binding MaximizeCommand}"
                                Foreground="{DynamicResource ThemeWhite}"
                                Background="{DynamicResource ThemeColorD}"
                                Style="{DynamicResource ControlImageButton}"
                                ImageGeometry="{DynamicResource MaximizeNCGeometry}"
                                DockPanel.Dock="Right"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                VerticalAlignment="Top"/>

                            <controls:ImageButton x:Name="MinimizeWindow"
                                Width="30"
                                Height="25"
                                Margin="0,0,0,0"
                                Click="{Binding MinimizeCommand}"
                                Foreground="{DynamicResource ThemeWhite}"
                                Background="{DynamicResource ThemeColorD}"
                                Style="{DynamicResource ControlImageButton}"
                                ImageGeometry="{DynamicResource MinimizeNCGeometry}"
                                DockPanel.Dock="Right"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                VerticalAlignment="Top"/>

                            <controls:ImageButton x:Name="ThemeWindow"
                                Width="30"
                                Height="25"
                                Margin="0,0,0,0"
                                Click="{Binding ShowThemeCommand}"
                                Foreground="{DynamicResource ThemeWhite}"
                                Background="{DynamicResource ThemeColorD}"
                                Style="{DynamicResource ControlImageButton}"
                                ImageGeometry="{DynamicResource MoreNCGeometry}"
                                DockPanel.Dock="Right"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                VerticalAlignment="Top"
                                Visibility="{Binding ThemingEnabled, Converter={StaticResource booleanToVisibilityConverter}}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>